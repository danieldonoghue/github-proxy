name: Build and Release Project Binaries

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

env:
  GO_VERSION: '1.23.3'

permissions:
  contents: write
  
jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: release-version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    outputs:
      release-version: ${{ steps.release-version.outputs.version }}
            
  build-and-publish:
    runs-on: ubuntu-latest
    needs: setup

    strategy:
      matrix:
        arch: [amd64, arm64]
        os: [linux, darwin]

    steps:
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build binary
        shell: bash
        run: |
          go mod tidy
          mkdir -p output/
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o output/github-proxy_${{ matrix.os }}_${{ matrix.arch }} -ldflags "-X main.Version=${{ needs.setup.outputs.release-version }}" cmd/github-proxy/*.go

      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: output/*
  
  release:
    name: Create github release
    needs: [ setup, build-and-publish ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        id: artifacts
        uses: actions/download-artifact@v3
        with:
          path: assets/

      - id: create_release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: 'github-proxy Release ${{ needs.setup.outputs.release-version }}'
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
      - name: Upload release artifacts
        shell: bash
        run: |
          files=$(find assets/ -type f)
          gh release upload ${{ github.ref_name }} $files --clobber
        env:
          GITHUB_TOKEN: ${{ github.token }}
